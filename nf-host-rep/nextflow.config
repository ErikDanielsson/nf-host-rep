params {
    outdir = null
    simdir = "${params.outdir}/sims"
    datadir = "${params.outdir}/data"
    bindir = "${params.outdir}/bins"
    publish_dir_mode = 'copy'
    time = false
    ngens = 1
    nruns = 3
    niter = 2500
    subsample = 1
    nhosts = 3
    nsymbionts = 3
    inference_algorithm = "mcmc-lw-dk"
    treeppl_model_name = "rejection_simple"
    models = false
    run_revbayes = false
    run_treeppl = true
    container_treeppl = "danielssonerik/treeppl:drift-kernels"
    container_revbayes = "sswiston/phylo_docker:slim_amd64"
    container_r = "danielssonerik/host-repertoire-treeppl:r-base"  
    container_python = "python:3.13"
    container_base = "ubuntu:22.04"
}

docker {
    enabled = true
}


process {

    container = params.container_base    

    cpus = 1
    memory = 1.GB

    publishDir = [
        path: { "${params.outdir}/${task.process.toLowerCase()}" },
        mode: params.publish_dir_mode,
    ]

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1

    withLabel:data {
        publishDir = [
            path: { "${params.datadir}/${task.process.toLowerCase()}" },
            mode: params.publish_dir_mode,
        ]
    }

    withLabel:compile {
        publishDir = [
            path: { "${params.bindir}/${task.process.toLowerCase()}" },
            mode: params.publish_dir_mode,
        ]
        memory = 3.GB
    }

    withLabel:sim {
        publishDir = [
            path: { "${params.simdir}/${task.process.toLowerCase()}" },
            mode: params.publish_dir_mode,
        ]
        memory = { 1.5.GB * Math.pow(2, task.attempt - 1) }
        maxRetries    = 5
    }
}