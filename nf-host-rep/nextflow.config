params {
    runs_dir = "simulations"
    runname = null
    outdir = "${params.runs_dir}/${params.runname}"
    simdir = "${params.outdir}/sims"
    datadir = "${params.outdir}/data"
    bindir = "${params.outdir}/bins"
    publish_dir_mode = 'copy'
    time = false
    ngens = null
    nruns = null
    niter = 2500
    subsample = 1
    nhosts = null
    nsymbionts = null
    inference_algorithm = null
    treeppl_model_name = null
    treeppl_model_dir = null
    models = null
    version_model_dir = null
    run_revbayes = false
    run_treeppl = false
    container_treeppl = null
    container_revbayes = "sswiston/phylo_docker:slim_amd64"
    container_r = "danielssonerik/host-repertoire-treeppl:r-base-pak"  
    container_python = "python:3.13"
    container_base = "ubuntu:22.04"
}

profiles {
    docker {
        docker.enabled    = true
        apptainer.enabled = false
        podman.enabled = false
    }

    apptainer {
        docker.enabled    = false
        apptainer.enabled = true
        podman.enabled = false
    }

    podman {
        docker.enabled    = false
        apptainer.enabled = false
        podman.enabled = true
    }
    no_freeze {
        executor.memory = 10.GB
        executor.cpus = 6
    }

    base_tppl {
        params.container_treeppl = "danielssonerik/treeppl:a2259e3"
        params.version_model_dir = "original"
    }
    cdk_tppl {
        params.container_treeppl = "danielssonerik/treeppl:custom-drift-kernels"
        params.version_model_dir = "custom-drift-kernels"
    }
}



process {

    container = params.container_base    

    cpus = 1
    memory = 1.GB

    publishDir = [
        path: { "${params.outdir}/${task.process.toLowerCase()}" },
        mode: params.publish_dir_mode,
    ]

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1

    withLabel:data {
        publishDir = [
            path: { "${params.datadir}/${task.process.toLowerCase()}" },
            mode: params.publish_dir_mode,
        ]
    }

    withLabel:compile {
        publishDir = [
            path: { "${params.bindir}/${task.process.toLowerCase()}" },
            mode: params.publish_dir_mode,
        ]
        memory = 2.GB
    }

    withLabel:sim {
        publishDir = [
            path: { "${params.simdir}/${task.process.toLowerCase()}" },
            mode: params.publish_dir_mode,
        ]
        memory = { 1.5.GB * Math.pow(2, task.attempt - 1) }
        maxRetries    = 5
    }
}